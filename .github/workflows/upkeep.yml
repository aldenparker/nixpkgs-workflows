name: upkeep

on:
  workflow_dispatch:
  schedule:
    - cron: "14 0 * * *" # Runs at 12:14 AM every day so as not to get bumped out by Github

jobs:
  update-package:
    strategy:
      matrix:
        package: # Update these to all the current packages that I am a maintainer of or use often.
          - xnconvert
    name: "${{ matrix.package }}"
    runs-on: ubuntu-latest
    steps:
      - name: prepare runner for nix
        uses: wimpysworld/nothing-but-nix@v6

      - name: install nix
        uses: DeterminateSystems/nix-installer-action@v17
        with:
            extra-conf: |
                sandbox = true

      - name: clone my nixpkgs
        uses: "actions/checkout@v4"
        with:
          repository: aldenparker/nixpkgs
          token: ${{ secrets.GH_TOKEN }}
          
      - name: check for update and if pr already exists
        env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        run: |
          git checkout -b update-${{ matrix.package }}-${{ github.run_id }}
          
          CURR_VERSION="$(nix eval --raw --file . ${{ matrix.package }}.version)"
          echo "Current version: $CURR_VERSION"
          echo "CURR_VERSION=$CURR_VERSION" >> $GITHUB_ENV
          nix-shell maintainers/scripts/update.nix --argstr package "${{ matrix.package }}" --argstr skip-prompt true
          NEW_VERSION="$(nix eval --raw --file . ${{ matrix.package }}.version)"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          if [ "$CURR_VERSION" = "$NEW_VERSION" ]; then
            echo "Versions are the same, no update needed."
            exit 1
          fi

          if gh pr list --repo "NixOS/nixpkgs" --search "${{ matrix.package }}: $CURR_VERSION -> $NEW_VERSION" | grep -q "${{ matrix.package }}: $CURR_VERSION -> $NEW_VERSION"; then
            echo "A pull request for this update already exists."
            exit 1
          fi

      - name: create commit
        env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git add .
          git commit -m "${{ matrix.package }}: $CURR_VERSION -> $NEW_VERSION"
          git push origin update-${{ matrix.package }}-${{ github.run_id }}
        
      - name: generate report and post pr
        env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        run: |
          echo "## \`nixpkgs-upkeep\` result
          Generated using [\`upkeep.yml\`](https://github.com/${{ github.repository }}/blob/main/.github/workflows/upkeep.yml)
          Command: \`nix-shell maintainers/scripts/update.nix --argstr package \"${{ matrix.package }}\" --argstr skip-prompt true\`
          Logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  
          ### NOTE: A nixpkgs-review will be run and posted to this pull request as soon as possible to make sure everything is building correctly.

          ## Things done

          - Built on platform(s)
            - [ ] x86_64-linux
            - [ ] aarch64-linux
            - [ ] x86_64-darwin
            - [ ] aarch64-darwin
          - For non-Linux: Is sandboxing enabled in \`nix.conf\`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))
            - [ ] \`sandbox = relaxed\`
            - [ ] \`sandbox = true\`
          - [ ] Tested, as applicable:
            - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))
            - and/or [package tests](https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests)
            - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)
            - made sure NixOS tests are [linked](https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package) to the relevant packages
          - [ ] Tested compilation of all packages that depend on this change using \`nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"\`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)
          - [ ] Tested basic functionality of all binary files (usually in \`./result/bin/\`)
          - [Nixpkgs 25.11 Release Notes](https://github.com/NixOS/nixpkgs/blob/master/doc/release-notes/rl-2511.section.md) (or backporting [24.11](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/release-notes/rl-2411.section.md) and [25.05](https://github.com/NixOS/nixpkgs/blob/master/doc/manual/release-notes/rl-2505.section.md) Nixpkgs Release notes)
            - [ ] (Package updates) Added a release notes entry if the change is major or breaking
          - [NixOS 25.11 Release Notes](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2511.section.md) (or backporting [24.11](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md) and [25.05](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2505.section.md) NixOS Release notes)
            - [ ] (Module updates) Added a release notes entry if the change is significant
            - [ ] (Module addition) Added a release notes entry if adding a new NixOS module
          - [x] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md), [pkgs/README.md](https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md), [maintainers/README.md](https://github.com/NixOS/nixpkgs/blob/master/maintainers/README.md) and other contributing documentation in corresponding paths.
          
          ---
          
          Add a :+1: [reaction] to [pull requests you find important].
          
          [reaction]: https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/
          [pull requests you find important]: https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc" > report.md

          cat report.md >> $GITHUB_STEP_SUMMARY

          gh pr create --base main --head aldenparker:update-${{ matrix.package }}-${{ github.run_id }} --title "${{ matrix.package }}: $CURR_VERSION -> $NEW_VERSION" -F report.md

          
